opcodes = {
# SPECIAL: Menus (DO NOT CREATE THESE MANUALLY; they are created automatically when needed)
    # Motion
    "motion_goto_menu": {
        "type": "menu",
        "category": "Motion",
        "newOpcode": "#REACHABLE TARGET MENU (GO)",
        "inputTypes": {},
        "optionTypes": {},
    },
    "motion_glideto_menu": {
        "type": "menu",
        "category": "Motion",
        "newOpcode": "#REACHABLE TARGET MENU (GLIDE)",
        "inputTypes": {},
        "optionTypes": {},
    },
    "motion_pointtowards_menu": {
        "type": "menu",
        "category": "Motion",
        "newOpcode": "#OBSERVABLE TARGET MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    # Looks
    "looks_costume": {
        "type": "menu",
        "category": "Motion",
        "newOpcode": "#COSTUME MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    "looks_backdrops": {
        "type": "menu",
        "category": "Motion",
        "newOpcode": "#BACKDROP MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    "looks_getinput_menu": {
        "type": "menu",
        "category": "Motion",
        "newOpcode": "#COSTUME PROPERTY MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    "looks_changeVisibilityOfSprite_menu": {
        "type": "menu",
        "category": "Motion",
        "newOpcode": "#SHOW/HIDE SPRITE MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    "looks_getOtherSpriteVisible_menu": {
        "type": "menu",
        "category": "Motion",
        "newOpcode": "#IS SPRITE VISIBLE MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    # Sounds
    "sound_sounds_menu": {
        "type": "menu",
        "category": "Sounds",
        "newOpcode": "#SOUND MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    # Control
    "control_stop_sprite_menu": {
        "type": "menu",
        "category": "Control",
        "newOpcode": "#STOP SPRITE MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    "control_create_clone_of_menu": { # menu for clone creation and deletion
        "type": "menu",
        "category": "Control",
        "newOpcode": "#CLONE TARGET MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    "control_run_as_sprite_menu": {
        "type": "menu",
        "category": "Control",
        "newOpcode": "#RUN AS SPRITE MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    # Sensing
    "sensing_touchingobjectmenu": {
        "type": "menu",
        "category": "Sensing",
        "newOpcode": "#TOUCHING OBJECT MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    "sensing_fulltouchingobjectmenu": {
        "type": "menu",
        "category": "Sensing",
        "newOpcode": "#FULL TOUCHING OBJECT MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    "sensing_touchingobjectmenusprites": {
        "type": "menu",
        "category": "Sensing",
        "newOpcode": "#TOUCHING OBJECT MENU SPRITES",
        "inputTypes": {},
        "optionTypes": {},
    },
    "sensing_distancetomenu": {
        "type": "menu",
        "category": "Sensing",
        "newOpcode": "#DISTANCE TO MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    "sensing_keyoptions": {
        "type": "menu",
        "category": "Sensing",
        "newOpcode": "#KEY MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    "sensing_scrolldirections": {
        "type": "menu",
        "category": "Sensing",
        "newOpcode": "#SCROLL DIRECTION MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    "sensing_of_object_menu": {
        "type": "menu",
        "category": "Sensing",
        "newOpcode": "#OJBECT PROPERTY MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    "sensing_fingeroptions": {
        "type": "menu",
        "category": "Sensing",
        "newOpcode": "#FINGER INDEX MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    # Music Extension
    "music_menu_DRUM": {
        "type": "menu",
        "category": "Music",
        "newOpcode": "#DRUM MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    "music_menu_INSTRUMENT": {
        "type": "menu",
        "category": "Music",
        "newOpcode": "#INSTRUMENT MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    # Pen Extension
    "pen_menu_FONT": {
        "type": "menu",
        "category": "Pen",
        "newOpcode": "#PEN FONT MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    "pen_menu_colorParam": {
        "type": "menu",
        "category": "Pen",
        "newOpcode": "#PEN PROPERTY MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    # Animated Text Extension
    "text_menu_FONT": {
        "type": "menu",
        "category": "Animated Text",
        "newOpcode": "#TEXT FONT MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    # Video Sensing Extension
    "videoSensing_menu_ATTRIBUTE": {
        "type": "menu",
        "category": "Video Sensing",
        "newOpcode": "#VIDEO SENSING PROPERTY",
        "inputTypes": {},
        "optionTypes": {},
    },
    "videoSensing_menu_SUBJECT": {
        "type": "menu",
        "category": "Video Sensing",
        "newOpcode": "#VIDEO SENSING TARGET",
        "inputTypes": {},
        "optionTypes": {},
    },
    "videoSensing_menu_VIDEO_STATE": {
        "type": "menu",
        "category": "Video Sensing",
        "newOpcode": "#VIDEO STATE",
        "inputTypes": {},
        "optionTypes": {},
    },
    "videoSensing_menu_SUBJECT": {
        "type": "menu",
        "category": "Video Sensing",
        "newOpcode": "#VIDEO SENSING TARGET",
        "inputTypes": {},
        "optionTypes": {},
    },
    # Text to Speech Extension
    "text2speech_menu_voices": {
        "type": "menu",
        "category": "Text to Speech",
        "newOpcode": "#TEXT TO SPEECH VOICE MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    "text2speech_menu_languages": {
        "type": "menu",
        "category": "Text to Speech",
        "newOpcode": "#TEXT TO SPEECH LANGUAGE MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    # Translate Extension
    "translate_menu_languages": {
        "type": "menu",
        "category": "Translate",
        "newOpcode": "#TRANSLATE LANGUAGE MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    # Makey Makey Extension
    "makeymakey_menu_KEY": {
        "type": "menu",
        "category": "Makey Makey",
        "newOpcode": "#MAKEY KEY MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    "makeymakey_menu_SEQUENCE": {
        "type": "menu",
        "category": "Makey Makey",
        "newOpcode": "#MAKEY KEY SEQUENCE MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    # Files Extension
    "twFiles_menu_encoding": {
        "type": "menu",
        "category": "Files",
        "newOpcode": "#FILE ENCODING MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    "twFiles_menu_automaticallyOpen": {
        "type": "menu",
        "category": "Files",
        "newOpcode": "#FILE SELECTOR MODE MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    # Others
    "note": {
        "type": "menu",
        "category": "Music",
        "newOpcode": "#NOTE MENU",
        "inputTypes": {},
        "optionTypes": {},
    },
    "polygon": { # Exception: This block may be used.
        "type": "embeddedMenu",
        "category": "Pen",
        "newOpcode": "POLYGON MENU",
        "inputTypes": {"x1": "number", "y1": "number", "x2": "number", "y2": "number", "x3": "number", "y3": "number", "x4": "number", "y4": "number"},
        "optionTypes": {"EXPANDED_MINIMIZED": "expanded|minimized", "VERTEX_COUNT": "vertex count"},
        "optionTranslation": {"button": "EXPANDED_MINIMIZED"}, # "VERTEX_COUNT": "VERTEX_COUNT"
    },
# SPECIAL: Variables and Lists
    "special_variable_value": {
        "type": "stringReporter",
        "category": "Variables",
        "newOpcode": "value of [VARIABLE]",
        "inputTypes": {},
        "optionTypes": {"VARIABLE": "variable"},
        "canHaveMonitor": True,
    },
    "special_list_value": {
        "type": "stringReporter",
        "category": "Lists",
        "newOpcode": "value of [LIST]",
        "inputTypes": {},
        "optionTypes": {"LIST": "list"},
        "canHaveMonitor": True,
    },
# SPECIAL: Custom Blocks
    "special_define": {
        "type": "hat",
        "category": "My Blocks",
        "newOpcode": "define custom block",
        "inputTypes": {},
        "optionTypes": {"noScreenRefresh": "boolean", "blockType": "blockType", "customOpcode": "opcode"},
    },
    "procedures_call": {
        "type": "dynamic",
        "category": "My Blocks",
        "newOpcode": "call custom block",
        "inputTypes": {},
        "optionTypes": {"customOpcode": "opcode"},
    },
    "procedures_return": {
        "type": "lastInstruction",
        "category": "My Blocks",
        "newOpcode": "return (VALUE)",
        "inputTypes": {"VALUE": "text"},
        "inputTranslation": {"return": "VALUE"},
        "optionTypes": {},
    },
    "procedures_set": {
        "type": "instruction",
        "category": "My Blocks",
        "newOpcode": "set (PARAM) to (VALUE)",
        "inputTypes": {"PARAM": "round", "VALUE": "text"},
        "optionTypes": {},
    },
    "argument_reporter_string_number": {
        "type": "stringReporter",
        "category": None,
        "newOpcode": "value of text [ARGUMENT]",
        "inputTypes": {},
        "optionTypes": {"ARGUMENT": "reporter name"},
        "optionTranslation": {"VALUE": "ARGUMENT"},
    },
    "argument_reporter_boolean": {
        "type": "booleanReporter",
        "category": None,
        "newOpcode": "value of boolean [ARGUMENT]",
        "inputTypes": {},
        "optionTypes": {"ARGUMENT": "reporter name"},
        "optionTranslation": {"VALUE": "ARGUMENT"},
    },
}