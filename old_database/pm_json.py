opcodes = {
    # JSON: Objects
    "jgJSON_json_validate": {
        "type": "booleanReporter",
        "category": "JSON",
        "newOpcode": "is json (JSON) valid?",
        "inputTypes": {"JSON": "text"},
        "inputTranslation": {"json": "JSON"},
        "optionTypes": {},
    },
    "jgJSON_getValueFromJSON": {
        "type": "stringReporter",
        "category": "JSON",
        "newOpcode": "get (KEY) from (JSON)",
        "inputTypes": {"KEY": "text", "JSON": "text"},
        "inputTranslation": {"VALUE": "KEY"},
        "optionTypes": {},
    },
    "jgJSON_getTreeValueFromJSON": {
        "type": "stringReporter",
        "category": "JSON",
        "newOpcode": "get path (PATH) from (JSON)",
        "inputTypes": {"PATH": "text", "JSON": "text"},
        "inputTranslation": {"VALUE": "PATH"},
        "optionTypes": {},
    },
    "jgJSON_setValueToKeyInJSON": {
        "type": "stringReporter",
        "category": "JSON",
        "newOpcode": "set (KEY) to (VALUE) in (JSON)",
        "inputTypes": {"KEY": "text", "VALUE": "text", "JSON": "text"},
        "optionTypes": {},
    },
    "jgJSON_json_delete": {
        "type": "stringReporter",
        "category": "JSON",
        "newOpcode": "in json (JSON) delete key (KEY)",
        "inputTypes": {"KEY": "text", "JSON": "text"},
        "inputTranslation": {"key": "KEY", "json": "JSON"},
        "optionTypes": {},
    },
    "jgJSON_json_values": {
        "type": "stringReporter",
        "category": "JSON",
        "newOpcode": "get all values from json (JSON)",
        "inputTypes": {"JSON": "text"},
        "inputTranslation": {"json": "JSON"},
        "optionTypes": {},
    },
    "jgJSON_json_keys": {
        "type": "stringReporter",
        "category": "JSON",
        "newOpcode": "get all keys from json (JSON)",
        "inputTypes": {"JSON": "text"},
        "inputTranslation": {"json": "JSON"},
        "optionTypes": {},
    },
    "jgJSON_json_has": {
        "type": "booleanReporter",
        "category": "JSON",
        "newOpcode": "json (JSON) has key (KEY) ?",
        "inputTypes": {"JSON": "text", "KEY": "text"},
        "inputTranslation": {"json": "JSON", "key": "KEY"},
        "optionTypes": {},
    },
    "jgJSON_json_combine": {
        "type": "stringReporter",
        "category": "JSON",
        "newOpcode": "combine json (JSON1) and json (JSON2)",
        "inputTypes": {"JSON1": "text", "JSON2": "text"},
        "inputTranslation": {"one": "JSON1", "two": "JSON2"},
        "optionTypes": {},
    },
    # JSON: Arrays
    "jgJSON_json_array_validate": {
        "type": "booleanReporter",
        "category": "JSON",
        "newOpcode": "is array (ARRAY) valid?",
        "inputTypes": {"ARRAY": "text"},
        "inputTranslation": {"array": "ARRAY"},
        "optionTypes": {},
    },
    "jgJSON_json_array_split": {
        "type": "booleanReporter",
        "category": "JSON",
        "newOpcode": "create an array from text (TEXT) with delimeter (DELIMETER)",
        "inputTypes": {"TEXT": "text", "DELIMETER": "text"},
        "inputTranslation": {"text": "TEXT", "delimeter": "DELIMETER"},
        "optionTypes": {},
    },
    "jgJSON_json_array_join": {
        "type": "booleanReporter",
        "category": "JSON",
        "newOpcode": "create text from array (ARRAY) with delimeter (DELIMETER)",
        "inputTypes": {"ARRAY": "text", "DELIMETER": "text"},
        "inputTranslation": {"array": "ARRAY", "delimeter": "DELIMETER"},
        "optionTypes": {},
    },
    "jgJSON_json_array_push": {
        "type": "stringReporter",
        "category": "JSON",
        "newOpcode": "in array (ARRAY) add (ITEM)",
        "inputTypes": {"ARRAY": "text", "ITEM": "text"},
        "inputTranslation": {"array": "ARRAY", "item": "ITEM"},
        "optionTypes": {},
    },
    "jgJSON_json_array_concatLayer1": {
        "type": "stringReporter",
        "category": "JSON",
        "newOpcode": "add items from array (SOURCEARRAY) to array (TARGETARRAY)",
        "inputTypes": {"SOURCEARRAY": "text", "TARGETARRAY": "text"},
        "inputTranslation": {"array2": "SOURCEARRAY", "array1": "TARGETARRAY"},
        "optionTypes": {},
    },
    "jgJSON_json_array_concatLayer2": {
        "type": "stringReporter",
        "category": "JSON",
        "newOpcode": "add items from array (SOURCEARRAY1) and array (SOURCEARRAY2) to array (TARGETARRAY)",
        "inputTypes": {"SOURCEARRAY1": "text", "SOURCEARRAY2": "text", "TARGETARRAY": "text"},
        "inputTranslation": {"array2": "SOURCEARRAY1", "array3": "SOURCEARRAY2", "array1": "TARGETARRAY"},
        "optionTypes": {},
    },
    "jgJSON_json_array_delete": {
        "type": "stringReporter",
        "category": "JSON",
        "newOpcode": "in array (ARRAY) delete (INDEX)",
        "inputTypes": {"ARRAY": "text", "INDEX": "number"},
        "inputTranslation": {"array": "ARRAY", "index": "INDEX"},
        "optionTypes": {},
    },
    "jgJSON_json_array_reverse": {
        "type": "stringReporter",
        "category": "JSON",
        "newOpcode": "reverse array (ARRAY)",
        "inputTypes": {"ARRAY": "text"},
        "inputTranslation": {"array": "ARRAY"},
        "optionTypes": {},
    },
    "jgJSON_json_array_insert": {
        "type": "stringReporter",
        "category": "JSON",
        "newOpcode": "in array (ARRAY) insert (VALUE) at (INDEX)",
        "inputTypes": {"ARRAY": "text", "VALUE": "text", "INDEX": "number"},
        "inputTranslation": {"array": "ARRAY", "value": "VALUE", "index": "INDEX"},
        "optionTypes": {},
    },
    "jgJSON_json_array_set": {
        "type": "stringReporter",
        "category": "JSON",
        "newOpcode": "in array (ARRAY) set (INDEX) to (VALUE)",
        "inputTypes": {"ARRAY": "text", "INDEX": "number", "VALUE": "text"},
        "inputTranslation": {"array": "ARRAY", "index": "INDEX", "value": "VALUE"},
        "optionTypes": {},
    },
    "jgJSON_json_array_get": {
        "type": "stringReporter",
        "category": "JSON",
        "newOpcode": "in array (ARRAY) get (INDEX)",
        "inputTypes": {"ARRAY": "text", "INDEX": "number"},
        "inputTranslation": {"array": "ARRAY", "index": "INDEX"},
        "optionTypes": {},
    },
    "jgJSON_json_array_indexofNostart": {
        "type": "stringReporter",
        "category": "JSON",
        "newOpcode": "in array (ARRAY) get index of (VALUE)",
        "inputTypes": {"ARRAY": "text", "VALUE": "text"},
        "inputTranslation": {"array": "ARRAY", "value": "VALUE"},
        "optionTypes": {},
    },
    "jgJSON_json_array_indexof": {
        "type": "stringReporter",
        "category": "JSON",
        "newOpcode": "in array (ARRAY) from (START) get index of (VALUE)",
        "inputTypes": {"ARRAY": "text", "START": "number", "VALUE": "text"},
        "inputTranslation": {"array": "ARRAY", "number": "START", "value": "VALUE"},
        "optionTypes": {},
    },
    "jgJSON_json_array_length": {
        "type": "stringReporter",
        "category": "JSON",
        "newOpcode": "length of array (ARRAY)",
        "inputTypes": {"ARRAY": "text"},
        "inputTranslation": {"array": "ARRAY"},
        "optionTypes": {},
    },
    "jgJSON_json_array_contains": {
        "type": "booleanReporter",
        "category": "JSON",
        "newOpcode": "array (ARRAY) contains (VALUE) ?",
        "inputTypes": {"ARRAY": "text", "VALUE": "text"},
        "inputTranslation": {"array": "ARRAY", "value": "VALUE"},
        "optionTypes": {},
    },
    "jgJSON_json_array_flat": {
        "type": "stringReporter",
        "category": "JSON",
        "newOpcode": "flatten nested array (ARRAY) by (LAYERS) layers",
        "inputTypes": {"ARRAY": "text", "LAYERS": "number"},
        "inputTranslation": {"array": "ARRAY", "layer": "LAYERS"},
        "optionTypes": {},
    },
    "jgJSON_json_array_getrange": {
        "type": "stringReporter",
        "category": "JSON",
        "newOpcode": "in array (ARRAY) get all items from (START) to (STOP)",
        "inputTypes": {"ARRAY": "text", "START": "number", "STOP": "number"},
        "inputTranslation": {"array": "ARRAY", "index1": "START", "index2": "STOP"},
        "optionTypes": {},
    },
    "jgJSON_json_array_isempty": {
        "type": "stringReporter",
        "category": "JSON",
        "newOpcode": "is array (ARRAY) empty?",
        "inputTypes": {"ARRAY": "text"},
        "inputTranslation": {"array": "ARRAY"},
        "optionTypes": {},
    },
}